// Mocks generated by Mockito 5.4.5 from annotations
// in stargazer/test/get_user_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:stargazer/core/services/data/datasources/remote/user_remote_datasource.dart'
    as _i4;
import 'package:stargazer/core/services/data/models/model.dart' as _i2;
import 'package:stargazer/core/services/domain/entities/user.dart' as _i3;
import 'package:stargazer/core/services/domain/repositories/user_repository.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSource extends _i1.Mock
    implements _i4.UserRemoteDataSource {
  @override
  _i5.Future<_i2.UserModel> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i5.Future<_i2.UserModel>.value(
              _FakeUserModel_0(this, Invocation.method(#getUser, [])),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserModel>.value(
              _FakeUserModel_0(this, Invocation.method(#getUser, [])),
            ),
          )
          as _i5.Future<_i2.UserModel>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  @override
  _i5.Future<_i3.User> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#getUser, [])),
            ),
            returnValueForMissingStub: _i5.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#getUser, [])),
            ),
          )
          as _i5.Future<_i3.User>);
}
